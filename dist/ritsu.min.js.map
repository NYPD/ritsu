{"version":3,"sources":["ritsu.js"],"names":["rules","getRuleByRuleClass","ruleClasses","Array","isArray","undefined","_rules","ruleToFind","some","ruleClass","_Rule","ruleType","validationFunction","errorMessageFunction","this","validate","getErrorMessage","_upsertValidationRule","errorMessageParam","Error","customErrorMessage","rule","ruleIndex","indexOf","splice","element","value","noSpace","hasAttribute","RegExp","replace","test","noThousandsSeparator","validNumericWhole","errorMessage","hasMinLimit","hasMaxLimit","getAttribute","decimalMax","validNumericDecimal","console","warn","$","datepicker","addValidationRule","ruleTypeOrRules","isRule","forEach","validation","_validateInput","validInput","type","userRegex","isAlpha","classList","contains","isNumeric","isFile","isRequired","fieldValue","isEmpty","trim","validationPattern","_validateAlphaField","_validateNumericField","_validateFileField","exception","_validateSelect","valueSelected","selectedIndex","options","validFile","simpleFileHash","noSimpleFileHash","files","length","validAlpha","elementClasses","split","validNumeric","elementClassString","fieldValueAsNum","Number","isNaN","minAttr","maxAttr","minLimit","maxLimit","validateElement","validElement","disabled","isInputOrTextarea","nodeName","isSelect","core","resetInitialFormValues","selector","_getSelectorAsElementArray","reduce","accumulator","push","isCheckbox","isRadio","intialValue","checked","newElement","cloneNode","removeAttribute","parentNode","replaceChild","markInvalidFields","isInvalid","useBootstrap4Stlying","defaultOptions","errorElement","useBootstrap3Stlying","_getClosestParentByClass","errorElementClassToUse","nextSibling","nextElementSibling","hasNextSibling","add","remove","showErrorMessages","messageCallback","elementArray","messageCallbackProvided","_handlemessageCallback","_removeErrorMessage","invalidElement","_getErrorMessageForInput","formGroup","small","document","createElement","innerHTML","className","insertBefore","helpBlock","querySelector","hasHelpBlock","em","b","br","appendChild","firstChild","helpTextNode","parentElement","elementId","label","htmlFor","closestFormGroup","jQueryIsPresent","jQuery","useBootstrap","autoMarkInvalidFields","autoShowErrorMessages","getErrorMessages","errorMessages","get","prototype","slice","call","querySelectorAll","NodeList","HTMLCollection","containerInputs","concat","subString","parent","from","clazz","includes","removeChild","_defaultmessageCallback","version","initialize","validationRules","storeInitialFormValues","setAttribute","initialValue","name","size","getInitialFormValue","resetIntialFormValues","isFormDirty","isDirty","valueChanged","String","isValid","getErrorMessagesAsMap","errorMessageMap","getErrorMessagesAsObjects","input"],"mappings":"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","file":"ritsu.min.js","sourcesContent":["var rules = function rules() {\n\n  var _rules = [];\n\n  //Public Methods *************************************************************\n  var getRuleByRuleClass = function getRuleByRuleClass(ruleClasses) {\n\n    var notAnArray = !Array.isArray(ruleClasses);\n    if (notAnArray) return _rules[ruleClasses] === undefined ? null : _rules[ruleClasses];\n\n    var ruleToFind = null;\n    ruleClasses.some(function(ruleClass) {\n\n      if (_rules[ruleClass] === undefined) return false;\n\n      ruleToFind = _rules[ruleClass];\n      return true;\n\n    });\n\n    return ruleToFind;\n\n  };\n\n  var addValidationRule = function addValidationRule(ruleTypeOrRules, ruleClass, validationFunction, errorMessageParam) {\n\n    var isArray = Array.isArray(ruleTypeOrRules);\n    var isRule = typeof ruleTypeOrRules === 'object' && !isArray;\n\n    if (isArray || isRule) {\n\n      if (isRule) ruleTypeOrRules = [ruleTypeOrRules];\n\n      ruleTypeOrRules.forEach(function(rule) {\n        _upsertValidationRule(rule.ruleType, rule.ruleClass, rule.validationFunction, rule.errorMessage);\n      });\n\n    } else {\n      _upsertValidationRule(ruleTypeOrRules, ruleClass, validationFunction, errorMessageParam);\n    }\n  };\n\n  //Private Methods ************************************************************\n  var _Rule = function _Rule(ruleType, ruleClass, validationFunction, errorMessageFunction) {\n    this.ruleType = ruleType;\n    this.ruleClass = ruleClass;\n    this.validate = validationFunction;\n    this.getErrorMessage = errorMessageFunction;\n  };\n\n  var _upsertValidationRule = function _upsertValidationRule(ruleType, ruleClass, validationFunction, errorMessageParam) {\n\n    if (ruleType !== 'alpha' && ruleType !== 'numeric')\n      throw new Error('The rule type for a new validation rule must be either \"alpha\" or \"numeric\"');\n\n    if (typeof ruleClass !== 'string')\n      throw new Error('The rule class for a new validation rule is missing or is not of type string');\n\n    if (typeof validationFunction !== 'function')\n      throw new Error('The validation function for a new validation rule is missing or is not of type function');\n\n    if (errorMessageParam === undefined)\n      errorMessageParam = function defaultErrorMessage() { return 'Invalid value'; };\n\n    if (typeof errorMessageParam === 'string') {\n      var customErrorMessage = errorMessageParam;\n      errorMessageParam = function defaultCustomErrorMessage() { return customErrorMessage; };\n    }\n\n    //Remove exsiting rule if found\n    var rule = getRuleByRuleClass(ruleClass);\n    if (rule !== null) {\n      var ruleIndex = _rules.indexOf(rule);\n      _rules.splice(ruleIndex, 1);\n    }\n\n    _rules[ruleClass] = new _Rule(ruleType, ruleClass, validationFunction, errorMessageParam);\n\n  };\n\n  var _validateAlphaOnly = function _validateAlphaOnly(element) {\n\n    var value = element.value;\n    var noSpace = element.hasAttribute('data-no-space');\n\n    /*\n     * Any case insensitive Roman character with periods, dashes, and spaces (if allowed).\n     *\n     * e.g. cool | cool-beans | cool beans | beans.\n     */\n    var alphaOnlyRegexString = '^([A-Za-z@.-])+$';\n    var alphaOnlyRegex = new RegExp(alphaOnlyRegexString.replace(/@/g, noSpace ? '' : '\\\\s'));\n\n    return alphaOnlyRegex.test(value);\n  };\n\n  var _validateAlphaZip = function _validateAlphaZip(element) {\n    /*\n     * Matches all Canadian or American postal codes with different formats. For USA it is:\n     * any 5 digits followed optionally by an optional space or dash or empty string and any 4 digits after the optional\n     * space or dash. For Canada it is: certain capital letters (only one), any digit (only one), any capital letter (only one),\n     * optional space, any digit (only one), any capitol letter (only one), and and digit (only one).\n     *\n     * e.g. 19608 | 19608-8911 | A9C1A1 | A9C 1A1\n     *\n     */\n    return /(^\\d{5}([\\s-]?\\d{4})?$)|(^[ABCEGHJKLMNPRSTVXY]{1}\\d{1}[A-Z]{1} ?\\d{1}[A-Z]{1}\\d{1}$)/.test(element.value);\n  };\n\n  var _validateAlphaNumeric = function _validateAlphaNumeric(element) {\n\n    var value = element.value;\n    var noSpace = element.hasAttribute('data-no-space');\n\n    /*\n     * Any case insensitive Roman character, digit, and spaces (if allowed)\n     *\n     * e.g. Cool | C00l\n     */\n    var alphaNumericRegexString = '^([a-zA-Z0-9@]+)$';\n    var alphaNumericRegex = new RegExp(alphaNumericRegexString.replace(/@/g, noSpace ? '' : '\\\\s'));\n\n    return alphaNumericRegex.test(value);\n  };\n\n\n  var _validateAlphaEmail = function _validateAlphaEmail(element) {\n    /*\n     * One or more non space charater + literal '@', + One or more non space charater + literal '.' + One or more non space charater.\n     * It does not check tld and special chacter validity.\n     *\n     * e.g. a@a.a | bob@google.com | cool-beans@beans.com.uk | $#%@$%@$.com\n     */\n    return /^(\\S+@\\S+\\.\\S+)$/.test(element.value);\n  };\n\n\n  var _validateNumericWhole = function _validateNumericWhole(element) {\n\n    var value = element.value;\n    var noThousandsSeparator = element.hasAttribute('data-no-thousands-separator');\n    /*\n     *  A negative or non negative number with optional thousands commas\n     *\n     *  e.g. 54 | -54 | -54,000 | 54000\n     */\n    var validNumericWhole = /^-?(([\\d]{1,3}(,{1}[\\d]{3})*)|[\\d]+)$/.test(value);\n    if (noThousandsSeparator) validNumericWhole = validNumericWhole && value.indexOf(',') === -1;\n\n    return validNumericWhole;\n\n  };\n\n  var _getNumericWholeErrorMessage = function _getNumericWholeErrorMessage(element) {\n\n    var errorMessage = 'Enter a whole number';\n\n    var hasMinLimit = element.hasAttribute('min');\n    var hasMaxLimit = element.hasAttribute('max');\n\n    if (hasMinLimit && hasMaxLimit) {\n      errorMessage = errorMessage + ' from ' + element.getAttribute('min') + ' to ' + element.getAttribute('max');\n    } else if (hasMinLimit) {\n      errorMessage = errorMessage + ' greater or equal to ' + element.getAttribute('min');\n    } else if (hasMaxLimit) {\n      errorMessage = errorMessage + ' lesser or equal to ' + element.getAttribute('max');\n    }\n\n    return errorMessage;\n  };\n\n  var _validateNumericDecimalString = function _validateNumericDecimalString(element) {\n\n    var value = element.value;\n    var noThousandsSeparator = element.hasAttribute('data-no-thousands-separator');\n    var decimalMax = element.getAttribute('data-decimal-max');\n    if (decimalMax === null) decimalMax = 2;\n\n    /*\n     * A negative or non negative monetary amount with optional thousands commas and optional hundreds decimal place\n     *\n     * e.g. -54 | 54 | 54.00 | -54,544 | 54,544.54\n     */\n    var numericDecimalRegexString = '^-?((([\\\\d]{1,3}(,[\\\\d]{3})*)+(\\\\.[\\\\d]{1,decimalPlaces})?)|[\\\\d]+(\\\\.[\\\\d]{1,decimalPlaces})?)$';\n    var numericDecimalRegex = new RegExp(numericDecimalRegexString.replace(/decimalPlaces/g, decimalMax));\n\n    var validNumericDecimal = numericDecimalRegex.test(value);\n    if (noThousandsSeparator) validNumericDecimal = validNumericDecimal && value.indexOf(',') === -1;\n\n    return validNumericDecimal;\n  };\n  var _getNumericDecimalErrorMessage = function _getNumericDecimalErrorMessage(element) {\n\n    var errorMessage = 'Please enter a number';\n\n    var hasMinLimit = element.hasAttribute('min');\n    var hasMaxLimit = element.hasAttribute('max');\n\n    var maxDecimals = element.hasAttribute('data-decimal-max') ? element.getAttribute('data-decimal-max') : 2;\n    errorMessage += ' with ' + maxDecimals + ' decimal places max';\n\n    if (hasMinLimit && hasMaxLimit) {\n      errorMessage = errorMessage + ' and from ' + element.getAttribute('min') + ' to ' + element.getAttribute('max');\n    } else if (hasMinLimit) {\n      errorMessage = errorMessage + ' and greater or equal to ' + element.getAttribute('min');\n    } else if (hasMaxLimit) {\n      errorMessage = errorMessage + ' and lesser or equal to ' + element.getAttribute('max');\n    }\n\n    return errorMessage;\n  };\n\n  /**\n   * @deprecated Since v1.3.0. Use numeric-whole instead and specify a min/max on the element\n   */\n  var _validateNumericFullYear = function _validateNumericFullYear(element) {\n    /*\n       * A four digit number\n       *\n       * e.g. 1999 | 2010 | 0000\n       */\n    // eslint-disable-next-line no-console\n    console.warn(\n      'numeric-full-year has been deprecated since v1.3.0. Use numeric-whole instead and specify a min/max on the element'\n    );\n    return /^(\\d{4})$/.test(element.value);\n  };\n\n\n  var _getNumericFullYearErrorMessage = function _getNumericFullYearErrorMessage(element) {\n\n    var errorMessage = 'Please enter a 4 digit year';\n\n    var hasMinLimit = element.hasAttribute('min');\n    var hasMaxLimit = element.hasAttribute('max');\n\n    if (hasMinLimit && hasMaxLimit) {\n      errorMessage = errorMessage + ' from ' + element.getAttribute('min') + ' to ' + element.getAttribute('max');\n    } else if (hasMinLimit) {\n      errorMessage = errorMessage + ' greater or equal to ' + element.getAttribute('min');\n    } else if (hasMaxLimit) {\n      errorMessage = errorMessage + ' lesser or equal to ' + element.getAttribute('max');\n    }\n\n    return errorMessage;\n  };\n\n  var _validateNumericJqueryDatePicker = function _validateNumericJqueryDatePicker(element) {\n\n    var $element = $(element);\n    var isValid = $element.datepicker('getDate') !== null;\n\n    return isValid;\n  };\n\n  //Add default rules\n  _upsertValidationRule('alpha', 'alpha-only', _validateAlphaOnly, 'Only letters, spaces, hypens, and periods are allowed');\n  _upsertValidationRule('alpha', 'alpha-zip', _validateAlphaZip, 'Enter a valid zip code');\n  _upsertValidationRule('alpha', 'alpha-numeric', _validateAlphaNumeric, 'Enter only alphanumeric characters');\n  _upsertValidationRule('alpha', 'alpha-email', _validateAlphaEmail, 'Make sure the email is correct');\n\n  _upsertValidationRule('numeric', 'numeric-whole', _validateNumericWhole, _getNumericWholeErrorMessage);\n  _upsertValidationRule('numeric', 'numeric-decimal', _validateNumericDecimalString, _getNumericDecimalErrorMessage);\n  _upsertValidationRule('numeric', 'numeric-full-year', _validateNumericFullYear, _getNumericFullYearErrorMessage);\n  _upsertValidationRule('numeric', 'numeric-jquery-date', _validateNumericJqueryDatePicker, 'Please select a date from the date picker');\n\n  return {\n    getRuleByRuleClass: getRuleByRuleClass,\n    addValidationRule: addValidationRule\n  };\n\n};\n\n\n\r\nvar validation = function validation(rules) {\n\n  var validateElement = function validateElement(element) {\n\n    var validElement = true;\n\n    var isDisabled = element.disabled === true;\n    if (isDisabled) return validElement; //No need to validate just exit early\n\n    var isInputOrTextarea = ['INPUT', 'TEXTAREA'].indexOf(element.nodeName) > -1;\n    var isSelect = element.nodeName === 'SELECT';\n\n    if (isInputOrTextarea) validElement = _validateInput(element);\n    if (isSelect) validElement = _validateSelect(element);\n\n    return validElement;\n\n  };\n\n  //Private Methods ************************************************************\n  var _validateInput = function _validateInput(element) {\n\n    var validInput = true;\n\n    var isHidden = element.type === 'hidden';\n    if (isHidden) return validInput;\n\n    var isAlpha = element.classList.contains('alpha');\n    var isNumeric = element.classList.contains('numeric');\n    var isFile = element.type === 'file';\n    var isRequired = element.hasAttribute('required');\n\n    var fieldValue = element.value;\n    var isEmpty = fieldValue === undefined || fieldValue.trim() === '';\n\n    var validationPattern = element.getAttribute('pattern');\n\n    var hasValidationPattern = validationPattern !== null;\n    if (hasValidationPattern) {\n\n      if (isEmpty && !isRequired) return validInput;\n\n      var userRegex;\n\n      try {\n        userRegex = new RegExp(validationPattern, 'u');\n      } catch (exception) {\n        userRegex = new RegExp(validationPattern);\n      }\n\n      return userRegex.test(fieldValue);\n    }\n\n    var noValidationNeeded = isEmpty && !isRequired && !isFile; //Cant check value of file inputs like this, let the _validateFileField() do it\n    if (noValidationNeeded) return validInput;\n\n    if (isAlpha) validInput = _validateAlphaField(element);\n    if (isNumeric) validInput = _validateNumericField(element);\n    if (isFile) validInput = _validateFileField(element);\n    if (!isAlpha && !isNumeric && !isFile && isRequired) validInput = !isEmpty; //Anything is allowed, just can't be blank\n\n    return validInput;\n  };\n\n  var _validateSelect = function _validateSelect(element) {\n    //If nothing is selected or there is no options, make the value undefined to avoid a TypeError\n    var valueSelected = element.selectedIndex === -1 ? undefined : element.options[element.selectedIndex].value;\n    var isRequired = element.hasAttribute('required');\n    var isEmpty = valueSelected === undefined || valueSelected.trim() === '';\n\n    var validSelect = isEmpty && !isRequired || !isEmpty;\n\n    return validSelect;\n\n  };\n\n  var _validateFileField = function _validateFileField(element) {\n    var validFile = true;\n\n    var isNotRequired = !element.hasAttribute('required');\n    if (isNotRequired) return validFile; //We dont care at all if it is not required (we cant eve validate it)\n\n    var simpleFileHash = element.getAttribute('data-simple-file-hash');\n\n    var noSimpleFileHash = !(simpleFileHash !== null && simpleFileHash.trim() !== '');\n    var noFilesAttached = element.files.length === 0;\n\n    if (noFilesAttached && noSimpleFileHash) validFile = false;\n    return validFile;\n  };\n\n  var _validateAlphaField = function _validateAlphaField(element) {\n\n    var validAlpha = true;\n\n    var isRequired = element.hasAttribute('required');\n    var elementClassString = element.getAttribute('class');\n    var elementClasses = elementClassString.split(' ');\n\n    var rule = rules.getRuleByRuleClass(elementClasses);\n    if (rule === null && !isRequired) return validAlpha; //No rule found and not required, so just exit\n    if (rule === null && isRequired) { //No rule found and IS required\n      console.warn('No ritsu rule found for the \"alpha\" input, add the appropriate alpha validation rule');\n      return false; \n    }\n\n    validAlpha = rule.validate(element);\n\n    return validAlpha;\n  };\n\n  var _validateNumericField = function _validateNumericField(element) {\n\n    var validNumeric = true;\n\n    var isRequired = element.hasAttribute('required');\n    var elementClassString = element.getAttribute('class');\n    var elementClasses = elementClassString ? elementClassString.split(' ') : ''; //In case there is no classes, make it empty strings for null safety\n\n    var rule = rules.getRuleByRuleClass(elementClasses);\n    if (rule === null && !isRequired) return validNumeric; //No rule found and not required, so just exit\n    if (rule === null && isRequired) { //No rule found and IS required\n      console.warn('No ritsu rule found for the \"numeric\" input, add the appropriate alpha validation rule');\n      return false; \n    }\n    \n    validNumeric = rule.validate(element);\n\n    //If it is still valid, check min and max if it has any\n    if (validNumeric) {\n      /*\n       * I know javascript auto converts strings into numbers when using \"non stirct equality\" operators,\n       * but do this excplicity to show intention. (This is prob overkill idk)\n       *\n       * This won't work in locales that use commas as decimal places.\n       */\n      var fieldValueAsNum = Number(element.value.replace(',', ''));\n      if (Number.isNaN(fieldValueAsNum)) return validNumeric; //Not a number, just return\n\n      var minAttr = element.getAttribute('min');\n      var maxAttr = element.getAttribute('max');\n\n      var minLimit = (minAttr === '' || minAttr === null) ? null : Number(minAttr);\n      var maxLimit = (maxAttr === '' || maxAttr === null) ? null : Number(maxAttr);\n\n      var hasMinLimit = minLimit !== null;\n      var hasMaxLimit = maxLimit !== null;\n\n      if (hasMinLimit && hasMaxLimit) {\n        validNumeric = fieldValueAsNum >= minLimit && fieldValueAsNum <= maxLimit;\n      } else if (hasMinLimit) {\n        validNumeric = fieldValueAsNum >= minLimit;\n      } else if (hasMaxLimit) {\n        validNumeric = fieldValueAsNum <= maxLimit;\n      }\n    }\n\n    return validNumeric;\n  };\n\n  return {\n    validateElement: validateElement\n  };\n\n};\n\n\n\r\nvar core = function core(rules, validation) {\n\n  var version = '1.5.0';\n  var jQueryIsPresent = typeof jQuery !== 'undefined';\n  var defaultOptions = {\n    useBootstrap: false,\n    useBootstrap3Stlying: false,\n    useBootstrap4Stlying: false,\n    autoMarkInvalidFields: true,\n    autoShowErrorMessages: false,\n    messageCallback: null\n  };\n\n  var initialize = function initilaize(options) {\n\n    var invalidOptions = typeof options !== 'object';\n    if (invalidOptions) throw new Error('Invalid options to initialize ritsu.js');\n\n    defaultOptions.useBootstrap3Stlying = options.useBootstrap3Stlying === undefined ? false : options.useBootstrap3Stlying;\n    defaultOptions.useBootstrap4Stlying = options.useBootstrap4Stlying === undefined ? false : options.useBootstrap4Stlying;\n    defaultOptions.autoMarkInvalidFields = options.autoMarkInvalidFields === undefined ? true : options.autoMarkInvalidFields;\n    defaultOptions.autoShowErrorMessages = options.autoShowErrorMessages === undefined ? false : options.autoShowErrorMessages;\n\n    defaultOptions.useBootstrap = defaultOptions.useBootstrap3Stlying || defaultOptions.useBootstrap4Stlying;\n\n    if (options.messageCallback === undefined) {\n      defaultOptions.messageCallback = null;\n    } else {\n      if (typeof options.messageCallback !== 'function') throw new Error('messageCallback is not a function');\n      defaultOptions.messageCallback = options.messageCallback;\n    }\n\n    var validationRules = options.validationRules;\n    if (validationRules !== undefined) rules.addValidationRule(validationRules);\n\n    return this;\n  };\n\n  var storeInitialFormValues = function storeInitialFormValues(selector) {\n\n    var elementArray = _getSelectorAsElementArray(selector);\n\n    elementArray.forEach(function(element) {\n\n      var isCheckbox = element.type === 'checkbox';\n      var isRadio = element.type === 'radio';\n      var isFile = element.type === 'file';\n\n      if (isCheckbox || isRadio) {\n        element.setAttribute('data-initial-value', element.checked);\n      } else if (isFile) {\n\n        var hasSimpleFileHash = element.getAttribute('data-simple-file-hash') !== undefined;\n\n        if (hasSimpleFileHash) {\n          element.setAttribute('data-initial-value', element.getAttribute('data-simple-file-hash'));\n          return true;\n        }\n\n        var hasFileAttached = element.files.length > 0;\n        var initialValue = hasFileAttached ? element.files[0].name + element.files[0].size : undefined;\n\n        element.setAttribute('data-initial-value', initialValue);\n\n      } else {\n        element.setAttribute('data-initial-value', element.value);\n      }\n\n    });\n\n    return this;\n  };\n\n  var getInitialFormValue = function getInitialFormValue(selector) {\n\n    var elementArray = _getSelectorAsElementArray(selector);\n    if (elementArray.length === 0) return null;\n\n    return elementArray[0].getAttribute('data-initial-value');\n\n  };\n\n  var resetInitialFormValues = function resetInitialFormValues(selector) {\n\n    var elementArray = _getSelectorAsElementArray(selector);\n\n    var initialValueElements = elementArray.reduce(function(accumulator, element) {\n\n      var hasInitialValue = element.hasAttribute('data-initial-value');\n      if (hasInitialValue) accumulator.push(element);\n\n      return accumulator;\n\n    }, []);\n\n    initialValueElements.forEach(function(element) {\n\n      var isCheckbox = element.type === 'checkbox';\n      var isRadio = element.type === 'radio';\n      var isFile = element.type === 'file';\n      var intialValue = element.getAttribute('data-initial-value');\n\n      if (isCheckbox || isRadio) {\n        element.checked = intialValue == 'true';\n      } else if (isFile) {\n\n        var newElement = element.cloneNode(true);\n        newElement.removeAttribute('data-initial-value');\n        newElement.removeAttribute('data-simple-file-hash');\n\n        element.parentNode.replaceChild(newElement, element);\n\n      } else {\n        element.value = intialValue;\n      }\n\n    });\n\n    return this;\n  };\n\n  var isFormDirty = function isFormDirty(selector) {\n\n    var isDirty = false;\n\n    var elementArray = _getSelectorAsElementArray(selector);\n\n    elementArray.forEach(function(element) {\n\n      var noInitialValue = element.getAttribute('data-initial-value') === undefined;\n      if (noInitialValue) return true;\n\n      var isCheckbox = element.type === 'checkbox';\n      var isRadio = element.type === 'radio';\n      var isFile = element.type === 'file';\n\n      var valueChanged = false;\n\n      var intialValue = element.getAttribute('data-initial-value');\n\n      if (isCheckbox || isRadio) {\n        valueChanged = intialValue != String(element.checked); //Need to convert it to a string to properly compare, since JS does not convert string to boolean for us http://www.ecma-international.org/ecma-262/5.1/#sec-11.9.3\n      } else if (isFile) {\n        var hasFileAttached = element.files.length > 0;\n        valueChanged = intialValue !== (hasFileAttached ? element.files[0].name + element.files[0].size : element.getAttribute('data-simple-file-hash'));\n      } else {\n        valueChanged = intialValue !== element.value;\n      }\n\n      //If one value has changed, mark the entire form dirty and return right away\n      if (valueChanged) {\n        isDirty = true;\n        return false;\n      }\n\n    });\n\n    return isDirty;\n  };\n\n  var validate = function validate(selector, messageCallback) {\n\n    var messageCallbackProvided = messageCallback !== undefined;\n    var elementArray = _getSelectorAsElementArray(selector);\n\n    var isValid = true;\n\n    elementArray.forEach(function(element) {\n\n      var invalidElement = !validation.validateElement(element);\n\n      if (defaultOptions.messageCallback !== null || messageCallbackProvided) {\n\n        if (messageCallbackProvided)\n          _handlemessageCallback(element, messageCallback, invalidElement);\n        else\n          _handlemessageCallback(element, defaultOptions.messageCallback, invalidElement);\n\n      }\n\n      //Sets the entire form to false, just because their was at least 1 invalid field\n      if (invalidElement) {\n        isValid = false;\n        element.setAttribute('data-invalid', true);\n      } else {\n        element.setAttribute('data-invalid', false);\n\n        //If there is no callback go ahead and de the default remove error message\n        if (defaultOptions.messageCallback === null && !messageCallbackProvided) _removeErrorMessage(element);\n      }\n\n    });\n\n    //If an messageCallback is provided use that always regardless of the \"auto\" settings\n    if (defaultOptions.messageCallback === null && !messageCallbackProvided) _defaultmessageCallback(elementArray);\n\n    return isValid;\n  };\n\n  var markInvalidFields = function markInvalidFields(selector) {\n\n    var elementArray = _getSelectorAsElementArray(selector);\n\n    elementArray.forEach(function(element) {\n\n      var isInvalid = element.getAttribute('data-invalid') === 'true';\n      var useBootstrap4Stlying = defaultOptions.useBootstrap4Stlying;\n\n      var errorElement = defaultOptions.useBootstrap3Stlying ? _getClosestParentByClass(element, 'form-group') : element;\n      //If the user is using bootstrap and does not have the input in a form-group for some reason\n      if (errorElement === null) errorElement = element;\n      //The error class is the same for Bootstrap 3 and vanilla\n      var errorElementClassToUse = defaultOptions.useBootstrap4Stlying ? 'is-invalid' : 'has-error';\n\n      //These two vars are used only for Bootstrap 4\n      var nextSibling  = element.nextElementSibling;\n      var hasNextSibling = nextSibling !== undefined && nextSibling !== null;\n\n      if (isInvalid) {\n        errorElement.classList.add(errorElementClassToUse);\n        if (useBootstrap4Stlying && hasNextSibling) nextSibling.classList.add('invalid-feedback');\n      }\n      else {\n        errorElement.classList.remove(errorElementClassToUse);\n        if (useBootstrap4Stlying && hasNextSibling) nextSibling.classList.remove('invalid-feedback');\n      }\n    });\n\n    return this;\n  };\n\n  var getErrorMessage = function getErrorMessage(selector) {\n\n    if (selector === undefined)\n      throw new Error('No selector passed in');\n\n    var errorMessages = getErrorMessages(selector);\n    return errorMessages[0] === undefined ? null : errorMessages[0];\n  };\n\n  var getErrorMessages = function(selector) {\n\n    var elementArray = _getSelectorAsElementArray(selector);\n\n    var errorMessages = [];\n\n    elementArray.forEach(function(element) {\n      var isInvalid = element.getAttribute('data-invalid') === 'true';\n      if (isInvalid) errorMessages.push(_getErrorMessageForInput(element));\n    });\n\n    return errorMessages;\n\n  };\n\n  /**\n   * @deprecated since v1.4.0\n   */\n  var getErrorMessagesAsMap = function getErrorMessagesAsMap(selector) {\n\n    // eslint-disable-next-line no-console\n    console.warn(\n      'getErrorMessagesAsMap has been deprecated since v1.4.0. Use getErrorMessagesAsObjects instead.'\n    );\n\n    var elementArray = _getSelectorAsElementArray(selector);\n\n    var errorMessageMap = {};\n\n    elementArray.forEach(function(element) {\n      var isInvalid = element.getAttribute('data-invalid') === 'true';\n      if (isInvalid) errorMessageMap[element] = _getErrorMessageForInput(element);\n    });\n\n    return errorMessageMap;\n\n  };\n\n  var getErrorMessagesAsObjects = function getErrorMessagesAsMap(selector) {\n\n    var elementArray = _getSelectorAsElementArray(selector);\n\n    var invalidErrorObjects = elementArray.reduce(function(accumulator, element) {\n\n      var isInvalid = element.getAttribute('data-invalid') === 'true';\n      if (isInvalid) {\n        accumulator.push({\n          'input': element,\n          'errorMessage': _getErrorMessageForInput(element)\n        });\n      }\n\n      return accumulator;\n\n    }, []);\n\n    return invalidErrorObjects;\n\n  };\n\n  var showErrorMessages = function showErrorMessages(selector, messageCallback) {\n\n    var elementArray = _getSelectorAsElementArray(selector);\n    var messageCallbackProvided = messageCallback !== undefined;\n\n    var invalidElements = elementArray.reduce(function(accumulator, element) {\n\n      var isInvalid = element.getAttribute('data-invalid') === 'true';\n\n      if (defaultOptions.messageCallback !== null || messageCallbackProvided) {\n        _handlemessageCallback(element, messageCallbackProvided ? messageCallback : defaultOptions.messageCallback, isInvalid);\n      } else {\n        _removeErrorMessage(element); //Remove any previous old error messages\n      }\n\n      if (isInvalid) accumulator.push(element);\n\n      return accumulator;\n\n    }, []);\n\n    invalidElements.forEach(function(invalidElement) {\n\n      var errorMessage = _getErrorMessageForInput(invalidElement);\n      var formGroup = _getClosestParentByClass(invalidElement, 'form-group');\n\n      var useBootstrapStlying = defaultOptions.useBootstrap3Stlying || defaultOptions.useBootstrap4Stlying;\n\n      if (useBootstrapStlying && formGroup != null) {\n\n        if (defaultOptions.useBootstrap4Stlying) {\n\n          var small = document.createElement('small');\n          small.innerHTML = errorMessage;\n          small.className = 'ritsu-error invalid-feedback';\n          formGroup.insertBefore(small, invalidElement.nextSibling);\n\n        } else {\n\n          var helpBlock = formGroup.querySelector('.help-block');\n          var hasHelpBlock = helpBlock !== null;\n\n          var em = document.createElement('em');\n          em.innerHTML = errorMessage;\n\n          var b = document.createElement('b');\n\n          //If it already has a help text node, add the error message indide it without messing up what is already there\n          if (hasHelpBlock) {\n\n            var br = document.createElement('br');\n            br.className = 'ritsu-error';\n\n            b.className = 'ritsu-error';\n            b.appendChild(em);\n            b.appendChild(br);\n\n            helpBlock.insertBefore(b, helpBlock.firstChild);\n          } else {\n\n            b.appendChild(em);\n\n            var helpTextNode = document.createElement('span');\n            helpTextNode.className = 'ritsu-error help-block';\n            helpTextNode.appendChild(b);\n\n            invalidElement.parentElement.appendChild(helpTextNode);\n          }\n        }\n\n      } else {\n\n        var elementId = invalidElement.getAttribute('id');\n\n        var label = document.createElement('label');\n        label.className = 'error-label ritsu-error';\n        label.htmlFor = elementId || '';\n        label.innerHTML = errorMessage;\n\n        var closestFormGroup = _getClosestParentByClass(invalidElement, 'form-group');\n        var errorContainer = closestFormGroup === null ? invalidElement.parentElement : closestFormGroup;\n\n        errorContainer.appendChild(label);\n\n      }\n\n    });\n\n    return this;\n  };\n\n  //Private Methods ************************************************************\n\n  // Return an empty array if nothing is found\n  var _getSelectorAsElementArray = function _getSelectorAsElementArray(selector) {\n\n    var isJquery = jQueryIsPresent ? selector instanceof jQuery : false;\n    if (isJquery) selector = selector.get();\n\n    var selectorUndefined = selector === undefined;\n    if (selectorUndefined) selector = Array.prototype.slice.call(document.querySelectorAll('input, textarea, select'));\n\n    var isStringSelector = typeof selector === 'string';\n    if (isStringSelector) selector = Array.prototype.slice.call(document.querySelectorAll(selector));\n\n    var isNodeListOrHtmlCollection = selector instanceof NodeList || selector instanceof HTMLCollection;\n    if (isNodeListOrHtmlCollection) selector = Array.prototype.slice.call(selector);\n\n    var isNotArray = !Array.isArray(selector);\n    if (isNotArray) selector = [selector];\n\n    var noElements = selector.length === 0;\n    if (noElements) return []; // return empty array to prevent kabooms in the console\n\n    var containerInputs = [];\n\n    selector.forEach(function(element) {\n\n      var isNotInputs = ['INPUT', 'TEXTAREA', 'SELECT'].indexOf(element.nodeName) === -1;\n\n      if (isNotInputs)\n        containerInputs = containerInputs.concat(Array.prototype.slice.call(element.querySelectorAll('input, textarea, select')));\n      else\n        containerInputs.push(element);\n    });\n\n    return containerInputs;\n  };\n\n  var _getClosestParentByClass = function _getClosestParentByClass(element, className, subString) {\n\n    while (element) {\n\n      var parent = element.parentElement;\n\n      if (parent === null || parent.classList.length === 0) {\n        element = parent;\n        continue;\n      }\n\n      var isClassDesired = Array.from(parent.classList).some(function(clazz) {\n        return subString ? clazz.includes(className) : clazz === className;\n      });\n\n      if (isClassDesired) return parent;\n\n      element = parent;\n\n    }\n\n    return null;\n\n  };\n\n  var _removeErrorMessage = function _removeErrorMessage(element) {\n\n    var parentElement = _getClosestParentByClass(element, 'form-group'); // TODO: might interfere with non bootstrap pages that have the same class.\n    if (parentElement === null) parentElement = element.parentElement;\n\n    if (parentElement === null) return; //still nothing to remove, just exit\n\n    var querySelector = defaultOptions.useBootstrap ? '.ritsu-error' : '.error-label, .warning-label'; //TODO maybe eveything should be a ritsu-error\n\n    Array.prototype.slice.call(parentElement.querySelectorAll(querySelector)).forEach(function(element) {\n      element.parentElement.removeChild(element);\n    });\n\n  };\n\n  var _handlemessageCallback = function _handlemessageCallback(element, messageCallback, invalidElement) {\n    var errorMessage = invalidElement ? _getErrorMessageForInput(element) : null;\n    messageCallback(element, errorMessage);\n  };\n\n  var _defaultmessageCallback = function _defaultmessageCallback(selector) {\n\n    if (defaultOptions.autoMarkInvalidFields) markInvalidFields(selector);\n    if (defaultOptions.autoShowErrorMessages) showErrorMessages(selector);\n\n  };\n\n  var _getErrorMessageForInput = function _getErrorMessageForInput(element) {\n\n    var isDropdown = element.nodeName === 'SELECT';\n    if (isDropdown) return 'Please select an option'; //Selects do not have rules\n\n    var elementHasErrorMessageAttr = element.hasAttribute('data-error-message');\n    if (elementHasErrorMessageAttr) return element.getAttribute('data-error-message');\n\n    var errorMessage = 'Invalid Value';\n\n    var elementClassString = element.getAttribute('class');\n\n    var elementHasNoClasses = elementClassString === null || elementClassString === '';\n    if (elementHasNoClasses) return errorMessage; //Element has no classes for some reason, so no rule wil be found\n\n    var elementClasses = elementClassString.split(' ');\n\n    var rule = rules.getRuleByRuleClass(elementClasses);\n    if (rule !== null) errorMessage = rule.getErrorMessage(element);\n\n    return errorMessage;\n  };\n\n  return {\n    \n\n\n    version: version,\n    rules: rules, //Access to the Rules API\n\n    initialize: initialize,\n    storeInitialFormValues: storeInitialFormValues,\n    getInitialFormValue: getInitialFormValue,\n    resetIntialFormValues: resetInitialFormValues, //DEPRECATED as of v1.2.3\n    resetInitialFormValues: resetInitialFormValues,\n    isFormDirty: isFormDirty,\n    validate: validate,\n    markInvalidFields: markInvalidFields,\n    showErrorMessages: showErrorMessages,\n    getErrorMessage: getErrorMessage,\n    getErrorMessages: getErrorMessages,\n    getErrorMessagesAsMap: getErrorMessagesAsMap,\n    getErrorMessagesAsObjects: getErrorMessagesAsObjects\n\n  };\n\n};\n\n\n"]}